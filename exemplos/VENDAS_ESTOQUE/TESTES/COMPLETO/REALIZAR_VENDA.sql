




DROP TABLE WDS_PLSQL_TDD_TESTE.PRODUTOS_PARA_VENDA;


CREATE TABLE WDS_PLSQL_TDD_TESTE.PRODUTOS_PARA_VENDA (
	NOME VARCHAR2(100) NOT NULL,
	QUANTIDADE NUMBER NOT NULL
);






--
-- Função de teste
CREATE OR REPLACE FUNCTION REMOVER_PRODUTOS_PARA_VENDA RETURN BOOLEAN IS
/*
{NOME:Remove os valores antigos para teste do Processo de Vendas}
{INFO:Remove os produtos da tabela de teste}
{ALVO_OWNER:VENDAS_ESTOQUE}
{ALVO_OBJECT:SEM_OBJETO}
{TESTE_AUXILIAR}
*/

    v_RESULTADO NUMBER;

BEGIN


    DELETE FROM WDS_PLSQL_TDD_TESTE.PRODUTOS_PARA_VENDA;
	

	COMMIT;
    
	
	RETURN TRUE;


END;
/






--
-- Função de teste
CREATE OR REPLACE FUNCTION CRIAR_PRODUTOS_PARA_VENDA( p_NOME_PRODUTO IN VARCHAR2 ) RETURN BOOLEAN IS
/*
{NOME:Gera Produtos teste de Vendas}
{INFO:Cria os produtos e a quantidade de itens que devem ser vendidos para cada um destes produtos}
{ALVO_OWNER:VENDAS_ESTOQUE}
{ALVO_OBJECT:SEM_OBJETO}
{QUERY_ARGUMENTO:SELECT NOME FROM WDS_PLSQL_TDD_TESTE.PRODUTOS_PARA_ESTOQUE}
{ANTES:REMOVER_PRODUTOS_PARA_VENDA}
{TESTE_AUXILIAR}
*/

    v_RESULTADO NUMBER;

    v_QTD_COMPRA NUMBER;

BEGIN


    v_QTD_COMPRA := TRUNC( DBMS_RANDOM.VALUE(1, 20) );


    INSERT INTO WDS_PLSQL_TDD_TESTE.PRODUTOS_PARA_VENDA
        ( NOME, QUANTIDADE )
    VALUES
        ( p_NOME_PRODUTO, v_QTD_COMPRA );


    v_RESULTADO := SQL%ROWCOUNT;

    
    COMMIT;

    
    RETURN ( v_RESULTADO > 0 );


END;
/








--
-- Função de teste
CREATE OR REPLACE FUNCTION ROLLBACK_REMOVER_VENDA_REALIZADA( p_NOME_PRODUTO IN VARCHAR2, p_QUANTIDADE NUMBER ) RETURN BOOLEAN IS
/*
{NOME:Realiza Rollback dos produtos adicionados no formato de TESTE}
{INFO:Realiza o rollback de todos os produtos adicionados para teste}
{ALVO_OWNER:VENDAS_ESTOQUE}
{ALVO_OBJECT:REALIZAR_VENDA}
{QUERY_ARGUMENTO:SELECT NOME, QUANTIDADE FROM WDS_PLSQL_TDD_TESTE.PRODUTOS_PARA_VENDA}
{TESTE_AUXILIAR}
*/

BEGIN


    -- Verifica se o produto foi inserido com sucesso
    DELETE FROM
        VENDAS_ESTOQUE.VENDAS
    WHERE 
        PRODUTO_ID = ( SELECT ID FROM VENDAS_ESTOQUE.ESTOQUE WHERE NOME = p_NOME_PRODUTO )
        AND QUANTIDADE_VENDIDA = p_QUANTIDADE;


    COMMIT;

    RETURN TRUE;

END;
/






--
-- Função de teste
CREATE OR REPLACE FUNCTION REALIZAR_VENDA_PRODUTO( p_NOME_PRODUTO IN VARCHAR2, p_QTD_COMPRA IN NUMBER ) RETURN BOOLEAN IS
/*
{NOME:Realiza uma venda}
{INFO:Realiza um processo de venda sobre um determinado produto do estoque }
{ALVO_OWNER:VENDAS_ESTOQUE}
{ALVO_OBJECT:REALIZAR_VENDA}
{QUERY_ARGUMENTO:SELECT NOME, QUANTIDADE FROM WDS_PLSQL_TDD_TESTE.PRODUTOS_PARA_VENDA}
{ANTES:ESTOQUE_ADICIONAR_PRODUTO,CRIAR_PRODUTOS_PARA_VENDA}
*/

    v_ID_PRODUTO NUMBER;

    v_FLAG_VENDA_REALIZADA NUMBER;

BEGIN

    
    SELECT ID INTO v_ID_PRODUTO FROM VENDAS_ESTOQUE.ESTOQUE WHERE NOME = p_NOME_PRODUTO;


    -- Realiza a Venda
	VENDAS_ESTOQUE.REALIZAR_VENDA( v_ID_PRODUTO, p_QTD_COMPRA );


    -- Verifica se a venda foi realizada
    SELECT
        COUNT(1) INTO v_FLAG_VENDA_REALIZADA
    FROM
        VENDAS_ESTOQUE.VENDAS
    WHERE 
        PRODUTO_ID = v_ID_PRODUTO
        AND QUANTIDADE_VENDIDA = p_QTD_COMPRA;
    

    RETURN v_FLAG_VENDA_REALIZADA > 0;

		
END;
/










