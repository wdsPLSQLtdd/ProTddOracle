--
-- Responsável por registrar as execuções dos testes
CREATE OR REPLACE PACKAGE GERENCIAR_TRACE AS
--
-- Responsável por registrar as execuções dos testes
--
-- Autor: Wesley David Santos
-- Skype: wesleydavidsantos		
-- https://www.linkedin.com/in/wesleydavidsantos
--

	FUNCTION GET_NOME_TRACE RETURN VARCHAR2;

	
	PROCEDURE ATIVAR_TRACE( p_TESTE_PRIMARIO_ID IN NUMBER, p_ID_EXECUCAO IN NUMBER );


	PROCEDURE DESATIVAR_TRACE;
		
	
END GERENCIAR_TRACE;
/




CREATE OR REPLACE PACKAGE BODY GERENCIAR_TRACE AS
--
-- Autor: Wesley David Santos
-- Skype: wesleydavidsantos		
-- https://www.linkedin.com/in/wesleydavidsantos
--

	RAISE_ERRO_ENCONTRADO EXCEPTION;

	v_NOME_TRACE VARCHAR2(300);


	v_FLAG_TRACE_INICIADO BOOLEAN DEFAULT FALSE;


	TYPE SESSAO_INFO IS RECORD (
		 INST_ID NUMBER
		,SID NUMBER
		,SERIAL NUMBER
	);


	USER_INFO SESSAO_INFO;



	FUNCTION GET_NOME_TRACE RETURN VARCHAR2 IS
	BEGIN

		RETURN v_NOME_TRACE;

	END;



	PROCEDURE SET_NOME_TRACE( p_TESTE_PRIMARIO_ID IN NUMBER ) AS
	BEGIN

		BEGIN

			v_NOME_TRACE := GERAR_NOME_TRACE( p_TESTE_PRIMARIO_ID );

		EXCEPTION

			WHEN OTHERS THEN

				LOG_GERENCIADOR.ADD_ERRO( 'SISTEMA', 'Falha ao setar o nome do Trace. Erro: ' || SQLERRM || ' - ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );

				RAISE RAISE_ERRO_ENCONTRADO;

		END;

	END;



	FUNCTION COLETA_INFO_USER RETURN BOOLEAN IS

		v_INST_ID NUMBER;

		v_SID NUMBER;

		v_SERIAL NUMBER;

	BEGIN

		BEGIN

			SELECT 
					P.INST_ID
					,S.SID
					,S.SERIAL#
				INTO
					 v_INST_ID
					,v_SID
					,v_SERIAL
			FROM
				SYS.GV_$SESSION S 
				INNER JOIN SYS.GV_$PROCESS P ON S.PADDR = P.ADDR
			WHERE
				S.AUDSID = SYS_CONTEXT('USERENV', 'SESSIONID');


			USER_INFO.INST_ID := v_INST_ID;

			USER_INFO.SID := v_SID;

			USER_INFO.SERIAL := v_SERIAL;


			RETURN TRUE;


		EXCEPTION

			WHEN OTHERS THEN
			
				LOG_GERENCIADOR.ADD_ERRO( 'SISTEMA', 'Falha ao indentificar a sessão do usuário. Erro: ' || SQLERRM || ' - ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );
			
				RETURN FALSE;

		END;

	END;



	FUNCTION INICIAR_COLETA RETURN BOOLEAN IS

		RAISE_ERRO_TRACE_NAO_ATIVADO EXCEPTION;


		v_TRACE_EVENTS CONSTANT VARCHAR2(200) := 'ALTER SESSION SET EVENTS ''10046 TRACE NAME CONTEXT FOREVER, LEVEL 4''';

		v_TRACEFILE_IDENTIFIER CONSTANT VARCHAR2(200) := 'ALTER SESSION SET TRACEFILE_IDENTIFIER = {NOME_TRACEFILE_IDENTIFIER}'; 

		v_NOME_TRACEFILE_IDENTIFIER VARCHAR2(300);

	BEGIN

		BEGIN


			IF NOT COLETA_INFO_USER THEN

				RETURN FALSE;

			END IF;


			BEGIN


				v_NOME_TRACEFILE_IDENTIFIER := REPLACE( v_TRACEFILE_IDENTIFIER, '{NOME_TRACEFILE_IDENTIFIER}', DBMS_ASSERT.ENQUOTE_LITERAL( GET_NOME_TRACE ) );


				EXECUTE IMMEDIATE v_TRACE_EVENTS;

				EXECUTE IMMEDIATE v_NOME_TRACEFILE_IDENTIFIER;


				RETURN TRUE;


			EXCEPTION

				WHEN OTHERS THEN
				
					LOG_GERENCIADOR.ADD_ERRO( 'SISTEMA', 'Falha ao setar as informações de sessão para gerar o Trace. Erro: ' || SQLERRM || ' - ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );
				
					RETURN FALSE;

			END;


		EXCEPTION

			WHEN RAISE_ERRO_TRACE_NAO_ATIVADO THEN

				LOG_GERENCIADOR.ADD_ERRO( 'SISTEMA', 'Falha ao ativar a coleta do Trace. ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );


			WHEN OTHERS THEN
			
				LOG_GERENCIADOR.ADD_ERRO( 'SISTEMA', 'Falha ao ativar a coleta do Trace. Erro: ' || SQLERRM || ' - ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );
			
		END;


		RETURN FALSE; 

	END;



	PROCEDURE ATIVAR_TRACE( p_TESTE_PRIMARIO_ID IN NUMBER, p_ID_EXECUCAO IN NUMBER ) AS

		v_TESTE_PRIMARIO_ID NUMBER;

		v_ID_EXECUCAO NUMBER;

		v_NOME_TRACE VARCHAR2(100);

	BEGIN

		BEGIN

			v_FLAG_TRACE_INICIADO := FALSE;

			SET_NOME_TRACE( p_TESTE_PRIMARIO_ID );

			IF NOT INICIAR_COLETA THEN

				RAISE RAISE_ERRO_ENCONTRADO;

			END IF;



			BEGIN

				v_TESTE_PRIMARIO_ID := p_TESTE_PRIMARIO_ID;

				v_ID_EXECUCAO := p_ID_EXECUCAO;

				v_NOME_TRACE := GET_NOME_TRACE;

				INSERT INTO TRACE_METADADOS 
					( FK_TESTE_ID, ID_EXECUCAO, ARQUIVO, SITUACAO, DATA_SITUACAO_ALTERADO )
				VALUES
					( v_TESTE_PRIMARIO_ID, v_ID_EXECUCAO, v_NOME_TRACE, 'COLETANDO', SYSDATE );
				
				COMMIT;

				v_FLAG_TRACE_INICIADO := TRUE;

			EXCEPTION

				WHEN OTHERS THEN
			
					LOG_GERENCIADOR.ADD_ERRO( 'SISTEMA', 'Falha ao registrar na tabela Trace as informações da coleta. Erro: ' || SQLERRM || ' - ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );

					RAISE RAISE_ERRO_ENCONTRADO;

			END;


		EXCEPTION

			WHEN OTHERS THEN
			
				RAISE RAISE_ERRO_ENCONTRADO;

		END;

	END;



	PROCEDURE DESATIVAR_TRACE AS

		v_NOME_TRACE VARCHAR2(100);
		
	BEGIN
		
		BEGIN

			IF NOT v_FLAG_TRACE_INICIADO THEN

				BEGIN

					RAISE RAISE_ERRO_ENCONTRADO;

				EXCEPTION

					WHEN OTHERS THEN

						LOG_GERENCIADOR.ADD_ERRO( 'SISTEMA', 'Necessário Ativar o Trace antes de realizar essa ação. ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );

						RAISE RAISE_ERRO_ENCONTRADO;

				END;

			END IF;



			BEGIN

				EXECUTE IMMEDIATE 'ALTER SESSION SET EVENTS ''10046 TRACE NAME CONTEXT OFF''';


				v_NOME_TRACE := GET_NOME_TRACE;


				UPDATE 
					TRACE_METADADOS
				SET
					SITUACAO = 'COLETADO'
				WHERE
					ARQUIVO = v_NOME_TRACE;


				COMMIT;

			EXCEPTION

				WHEN OTHERS THEN
			
					LOG_GERENCIADOR.ADD_ERRO( 'SISTEMA', 'Falha ao atualizar na tabela Trace as informações sobre a finalização da coleta. Erro: ' || SQLERRM || ' - ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );

					RAISE RAISE_ERRO_ENCONTRADO;

			END;


		EXCEPTION

			WHEN OTHERS THEN
			
				LOG_GERENCIADOR.ADD_ERRO( 'SISTEMA', 'Falha ao desativar a coleta do Trace. Erro: ' || SQLERRM || ' - ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );

				RAISE RAISE_ERRO_ENCONTRADO;

		END;

	END;


END GERENCIAR_TRACE;
/
